# üîê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø reCAPTCHA
## –ê–≥–µ–Ω—Ç –Ω–∞ —Å–¥–µ–ª–∫—É –°–ü–± - –°–µ—Ä–≤–µ—Ä–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞

### üìã –ö–õ–Æ–ß–ò reCAPTCHA:

#### üåê Site Key (–ø—É–±–ª–∏—á–Ω—ã–π - –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏):
6LdAdJ0rAAAAAGX8EgZIT5A295K_10U5apwWKPN

#### üîí Secret Key (—Å–µ–∫—Ä–µ—Ç–Ω—ã–π - –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏):
6LdAdJ0rAAAAALUNUES0de4Ifymn78YdZ6V7nLOa

---

### üìù –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –°–ï–†–í–ï–†–ù–û–ô –ß–ê–°–¢–ò:

#### 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ reCAPTCHA –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:
```php
// PHP –ø—Ä–∏–º–µ—Ä
$secret_key = "6LdAdJ0rAAAAALUNUES0de4Ifymn78YdZ6V7nLOa";
$recaptcha_response = $_POST['g-recaptcha-response'];

$verify_url = "https://www.google.com/recaptcha/api/siteverify";
$data = [
    'secret' => $secret_key,
    'response' => $recaptcha_response,
    'remoteip' => $_SERVER['REMOTE_ADDR']
];

$options = [
    'http' => [
        'header' => "Content-type: application/x-www-form-urlencoded\r\n",
        'method' => 'POST',
        'content' => http_build_query($data)
    ]
];

$context = stream_context_create($options);
$result = file_get_contents($verify_url, false, $context);
$response = json_decode($result);

if ($response->success) {
    // reCAPTCHA –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
} else {
    // reCAPTCHA –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
}
```

#### 2. Node.js –ø—Ä–∏–º–µ—Ä:
```javascript
const axios = require('axios');

async function verifyRecaptcha(recaptchaResponse, remoteIp) {
    const secretKey = "6LdAdJ0rAAAAALUNUES0de4Ifymn78YdZ6V7nLOa";
    
    try {
        const response = await axios.post('https://www.google.com/recaptcha/api/siteverify', {
            secret: secretKey,
            response: recaptchaResponse,
            remoteip: remoteIp
        });
        
        return response.data.success;
    } catch (error) {
        console.error('reCAPTCHA verification error:', error);
        return false;
    }
}
```

#### 3. Python –ø—Ä–∏–º–µ—Ä:
```python
import requests

def verify_recaptcha(recaptcha_response, remote_ip):
    secret_key = "6LdAdJ0rAAAAALUNUES0de4Ifymn78YdZ6V7nLOa"
    
    data = {
        'secret': secret_key,
        'response': recaptcha_response,
        'remoteip': remote_ip
    }
    
    response = requests.post('https://www.google.com/recaptcha/api/siteverify', data=data)
    result = response.json()
    
    return result.get('success', False)
```

---

### ‚ö†Ô∏è –í–ê–ñ–ù–´–ï –ó–ê–ú–ï–ß–ê–ù–ò–Ø:

1. **Site Key** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ HTML –∫–æ–¥–µ (–∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è —á–∞—Å—Ç—å)
2. **Secret Key** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤ –∫–æ–¥–µ –∫–ª–∏–µ–Ω—Ç–∞)
3. **–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ reCAPTCHA** –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ñ–æ—Ä–º—ã
4. **–õ–æ–≥–∏—Ä—É–π—Ç–µ –ø–æ–ø—ã—Ç–∫–∏** –æ–±—Ö–æ–¥–∞ reCAPTCHA –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

---

### üîó –ü–û–õ–ï–ó–ù–´–ï –°–°–´–õ–ö–ò:

- **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è reCAPTCHA:** https://developers.google.com/recaptcha/docs/display
- **–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:** https://developers.google.com/recaptcha/docs/verify
- **–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:** https://www.google.com/recaptcha/admin

---

**‚úÖ –ö–ª—é—á–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –∫–æ–¥!**
**üîÑ –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É!**
